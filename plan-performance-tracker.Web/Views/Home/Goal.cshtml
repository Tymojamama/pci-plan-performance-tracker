@model PlanPerformance.Business.Entities.Goal
@{
    var goal = Model;
    var goals = PlanPerformance.Business.Entities.Goal.Get();
    var plans = DataIntegrationHub.Business.Entities.Plan.Get();
    var goalMetrics = PlanPerformance.Business.Entities.GoalMetric.Get()
        .FindAll(x => x.GoalId == goal.Id)
        .OrderByDescending(x => x.ValueAsOf);
        //.ThenBy(x => plans.Find(p => p.PlanId == x.PlanId).Name);
}

<script type="text/javascript">
    function goToGoals() {
        window.location = "/Home/Goals";
    }

    function deleteGoal(id) {
        window.location = "/Home/DeleteGoal?id=" + id;
    }

    function newGoalMetric_OnClick(planId) {
        window.location = "/Home/GoalMetric?goalId=" + planId;
    }

    function goalMetric_OnClick(id, planId) {
        window.location = "/Home/GoalMetric?id=" + id + "&goalId=" + planId;
    }
</script>

<div class="row" style="padding: 0px 15px">

    <div style="padding-bottom:8px;float:left;width:100%;">
        @if (goal.ExistingRecord == false) {
            <h1>New Goal</h1>
        }
        else
        {
            <h1>@goal.Name</h1>
        }
    </div>

    @using (Html.BeginForm("SaveGoal", "Home", FormMethod.Post, new { @style = "display:inline;" }))
    {
        @Html.Hidden("goal-existing-record", goal.ExistingRecord);
        @Html.Hidden("goal-id", goal.Id);
        <label class="input-label">Name</label>
        @Html.TextBox("goal-name", goal.Name, new { @class = "input-text" });
        <br />
        <label class="input-label">Team</label>
        @Html.TextBox("goal-team", goal.Team, new { @class = "input-text" });
        <br />
        <label class="input-label">Type</label>
        @Html.TextBox("goal-type", goal.Type, new { @class = "input-text" });
        <br />
        <label class="input-label">Frequency</label>
        @Html.TextBox("goal-frequency", goal.Frequency, new { @class = "input-text" });

        <div style="padding-top:15px;" />

        <input class="input-button" type="submit" value="Save" />
    }

    @using (Html.BeginForm("DeleteGoal", "Home", FormMethod.Post, new { @style = "display:inline;" }))
    {
        @Html.Hidden("goal-id", goal.Id);
        <button class="input-button">Delete</button>
    }
    @using (Html.BeginForm("Goals", "Home", FormMethod.Get, new { @style = "display:inline;" }))
    {
        <button class="input-button" onclick="goToGoals()">Cancel</button>
    }
</div>

<div class="row" style="padding: 15px">

    <div style="padding-bottom:8px;float:left;width:100%;">
        <h3>Goal Metrics</h3>
    </div>

    <div style="padding-bottom:8px;float:left;width:100%;">
        <div style="float:left;">
            <button class="input-button" onclick="newGoalMetric_OnClick('@goal.Id')">New</button>
        </div>
        <div style="float:right;display:none">
            <span>Search:</span>
            <input type="text" />
        </div>
    </div>

    <table class="data-table">
        <tr class="data-table-header">
            <td class="data-table-header-cell">Goal</td>
            <td class="data-table-header-cell">Plan</td>
            <td class="data-table-header-cell">Industry</td>
            <td class="data-table-header-cell">Value</td>
            <td class="data-table-header-cell">Value As Of</td>
        </tr>
        @foreach (var goalMetric in goalMetrics)
        {
            <tr class="data-table-row" onclick="goalMetric_OnClick('@goalMetric.Id.ToString()','@goalMetric.GoalId.ToString()')">
                <td>@goals.Find(x => x.Id == goalMetric.GoalId).Name</td>
                @if (plans.FindAll(x => x.PlanId == goalMetric.PlanId).Count != 0)
                {
                    <td>@plans.Find(x => x.PlanId == goalMetric.PlanId).Name</td>
                }
                else
                {
                    <td></td>
                }
                <td>@goalMetric.Industry</td>
                <td>@goalMetric.Value</td>
                <td>@goalMetric.ValueAsOf</td>
            </tr>
        }
    </table>
</div>